const _0x3d16 = [
  'your\x20changes\x20were\x20saved',
  '/entries.json',
  '\x0aCOMMANDS:\x0a\x0a\x20\x20all\x0a\x20\x20\x20\x20print\x20all\x20entries\x20to\x20the\x20console\x0a\x0a\x20\x20read\x20<key>\x0a\x20\x20\x20\x20print\x20a\x20single\x20key/value\x20pair\x20to\x20the\x20console\x0a\x0a\x20\x20delete\x20<key>\x0a\x20\x20\x20\x20remove\x20the\x20entry\x20with\x20this\x20key\x0a\x0a\x20\x20write\x20<key>\x20<value>\x0a\x20\x20\x20\x20set\x20the\x20given\x20key/value\x20pair\x0a\x0aFLAGS:\x0a\x0a\x20\x20-h\x0a\x20\x20\x20\x20print\x20this\x20helpful\x20message\x0a',
  '\x20\x20\x0aSee\x20\x22node\x20file.js\x20-h\x22',
  'argv',
  'a\x20key\x20is\x20required,\x20cannot\x20',
  'read',
  'log',
  '\x20is\x20not\x20a\x20valid\x20command\x20\x20\x0aSee\x20\x22node\x20file.js\x20-h\x22',
  'key\x20\x22',
  'parse',
  'all',
  'error',
  'stringify',
  'no\x20value\x20provided.\x20\x20cannot\x20write\x20\x22',
  'exit',
  '\x22\x20does\x20not\x20exist.\x20cannot\x20read',
  'utf-8',
  'hasOwnProperty',
  'a\x20command\x20is\x20required\x20\x20\x0aSee\x20\x22node\x20file.js\x20-h\x22',
  '\x22\x20does\x20not\x20exist.\x20cannot\x20delete',
  'writeFile',
  'delete',
  'write',
];
(function (_0x4c174c, _0x3d1659) {
  const _0x5a4722 = function (_0x1d2a9d) {
    while (--_0x1d2a9d) {
      _0x4c174c['push'](_0x4c174c['shift']());
    }
  };
  _0x5a4722(++_0x3d1659);
})(_0x3d16, 0x1a3);
const _0x5a47 = function (_0x4c174c, _0x3d1659) {
  _0x4c174c = _0x4c174c - 0x0;
  let _0x5a4722 = _0x3d16[_0x4c174c];
  return _0x5a4722;
};
const _0x437793 = require('fs');
const _0x807f27 = __dirname + _0x5a47('0xe');
const _0x482aca = _0x5a47('0xf');
if (process[_0x5a47('0x11')]['includes']('-h')) {
  console['log'](_0x482aca);
  process[_0x5a47('0x4')](0x0);
}
const _0x47bf8f = (_0x3e416c, _0x154910, _0x2c1c39, _0x63d20) => {
  if (_0x154910 === undefined) {
    console[_0x5a47('0x14')](_0x5a47('0x8'));
    process[_0x5a47('0x4')](0x0);
  }
  if (
    _0x5a47('0x0') !== _0x154910 &&
    _0x5a47('0x13') !== _0x154910 &&
    _0x5a47('0xb') !== _0x154910 &&
    _0x5a47('0xc') !== _0x154910
  ) {
    console[_0x5a47('0x14')](_0x154910 + _0x5a47('0x15'));
    process['exit'](0x0);
  }
  if (_0x154910 === _0x5a47('0x0')) {
    console['log'](_0x3e416c);
    process['exit'](0x0);
  }
  if (_0x2c1c39 === undefined) {
    console['log'](_0x5a47('0x12') + _0x154910 + _0x5a47('0x10'));
    process[_0x5a47('0x4')](0x0);
  }
  if ('read' === _0x154910) {
    if (!_0x3e416c[_0x5a47('0x7')](_0x2c1c39)) {
      console['log'](_0x5a47('0x16') + _0x2c1c39 + _0x5a47('0x5'));
      process[_0x5a47('0x4')](0x0);
    }
    console[_0x5a47('0x14')](_0x2c1c39 + ':\x20' + _0x3e416c[_0x2c1c39]);
    process[_0x5a47('0x4')](0x0);
  } else if (_0x5a47('0xb') === _0x154910) {
    if (!_0x3e416c[_0x5a47('0x7')](_0x2c1c39)) {
      console[_0x5a47('0x14')](_0x5a47('0x16') + _0x2c1c39 + _0x5a47('0x9'));
      process[_0x5a47('0x4')](0x0);
    }
    delete _0x3e416c[_0x2c1c39];
  } else if (_0x5a47('0xc') === _0x154910) {
    if (_0x63d20 === undefined) {
      console[_0x5a47('0x14')](_0x5a47('0x3') + _0x2c1c39 + '\x22');
      process[_0x5a47('0x4')](0x0);
    }
    _0x3e416c[_0x2c1c39] = _0x63d20;
  }
  const _0x495b5d = JSON[_0x5a47('0x2')](_0x3e416c, null, '\x20\x20');
  const _0x1ad351 = (_0x207f6f) => {
    if (_0x207f6f) {
      console[_0x5a47('0x14')](_0x207f6f);
    } else {
      console[_0x5a47('0x14')](_0x5a47('0xd'));
      console[_0x5a47('0x14')]('(' + _0x154910 + ')\x20' + _0x2c1c39);
    }
  };
  _0x437793[_0x5a47('0xa')](_0x807f27, _0x495b5d, _0x1ad351);
};
const _0xd0c9e1 = (_0x252de7, _0x484881) => {
  if (_0x252de7) {
    console[_0x5a47('0x1')](_0x252de7);
  } else {
    const _0x5e8543 = JSON[_0x5a47('0x17')](_0x484881);
    _0x47bf8f(
      _0x5e8543,
      process['argv'][0x2],
      process['argv'][0x3],
      process['argv'][0x4],
    );
  }
};
_0x437793['readFile'](_0x807f27, _0x5a47('0x6'), _0xd0c9e1);
